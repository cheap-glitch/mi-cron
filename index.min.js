/*!
 * mi-cron
 *
 * A microscopic parser for standard cron expressions.
 *
 * Copyright (c) 2020-present, cheap glitch
 * This software is distributed under the ISC license
 */
Object.defineProperty(exports,"__esModule",{value:!0}),exports.parseCron=void 0;const shorthands={"@hourly":"0 * * * *","@daily":"0 0 * * *","@weekly":"0 0 * * 6","@monthly":"0 0 1 * *","@yearly":"0 0 1 1 *","@annually":"0 0 1 1 *"};function parseCron(e){const n=e.trim().split(/\s+/);if(1==n.length)return n[0]in shorthands?parseCron(shorthands[n[0]]):null;if(5==n.length){let e=null;try{e={minutes:parseField(n[0],0,59),hours:parseField(n[1],0,23),days:parseField(n[2],1,31),months:parseField(n[3],1,12,["jan","feb","mar","apr","may","jun","jul","aug","sep","oct","nov","dec"]),weekDays:parseField(n[4],0,6,["sun","mon","tue","wed","thu","fri","sat"])}}catch(e){return null}return e}return null}function parseField(e,n,r,t=[]){const s=Array.from(new Set(e.split(",").flatMap(e=>{const[s,a="1"]=e.split("/"),o=parseInt(a,10);if(Number.isNaN(o))throw Error();if("*"==s)return range(n,r,o);const u=s.match(rangePattern);if(!u)throw Error();const i=parseRangeBoundary(u[1],n,r,t),l=parseRangeBoundary(u[2],n,r,t);if(null===i||null!==l&&l<i)throw Error();return null==l?[i]:range(i,l,o)})));return s.sort((e,n)=>e-n),s}exports.parseCron=parseCron;const bound="(\\d{1,2}|[a-z]{3})",rangePattern=new RegExp(`^${bound}(?:-${bound})?$`,"i");function parseRangeBoundary(e,n,r,t=[]){if(!e)return null;if(t.includes(e))return t.indexOf(e);const s=parseInt(e,10);return!Number.isNaN(s)&&n<=s&&s<=r?s:null}function findNextTime(e,n,r,t){n[r]=e[r].find("minutes"==r?e=>e>n[r]:e=>e>=n[r]),void 0===n[r]&&(n[r]=e[r][0],n[t]++)}function cronDateToUTC(e){return new Date(Date.UTC(e.years,e.months-1,e.days,e.hours,e.minutes))}function range(e,n,r=1){return Array.from({length:Math.floor((n-e)/r)+1}).map((n,t)=>e+t*r)}parseCron.nextDate=function(e,n=new Date){if(null===(e="string"==typeof e?parseCron(e):e))return null;const r={minutes:n.getUTCMinutes(),hours:n.getUTCHours(),days:n.getUTCDate(),months:n.getUTCMonth()+1,years:n.getUTCFullYear()};findNextTime(e,r,"minutes","hours"),findNextTime(e,r,"hours","days");do{findNextTime(e,r,"days","months"),findNextTime(e,r,"months","years")}while(!e.weekDays.includes(cronDateToUTC(r).getUTCDay())&&++r.days);return cronDateToUTC(r)};